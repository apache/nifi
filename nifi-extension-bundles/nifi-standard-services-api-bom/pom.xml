<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!--
      Licensed to the Apache Software Foundation (ASF) under one or more
      contributor license agreements.  See the NOTICE file distributed with
      this work for additional information regarding copyright ownership.
      The ASF licenses this file to You under the Apache License, Version 2.0
      (the "License"); you may not use this file except in compliance with
      the License.  You may obtain a copy of the License at
          http://www.apache.org/licenses/LICENSE-2.0
      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    -->
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache.nifi</groupId>
        <artifactId>nifi-extension-bundles</artifactId>
        <version>2.4.0-SNAPSHOT</version>
    </parent>
    <artifactId>nifi-standard-services-api-bom</artifactId>
    <packaging>pom</packaging>
    <description>
        BOM to capture all standard controller service APIs and utils we want to make readily available to any nars that want to
        leverage this common managed set of dependencies
    </description>
    <dependencyManagement>
        <dependencies>

            <!-- Note: The entries in the 'nifi-standard-services-api-bom' are all marked as provided so anything depending
            on it will not include these in its own build output.  The complement to this is 'nifi-standard-services-api-nar'
            which should have the same entries but they should all be listed as compile scope.  This ensures the jars are
            present in that nar which is the parent of all nars which use any standard services.

            If changes are made in one pom then the complementary change must be made in the other.
            -->

            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-security-utils-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-utils</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-record</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-ssl-context-service-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-distributed-cache-client-service-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-http-context-map-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-database-dialect-service-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-dbcp-service-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-oauth2-provider-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-schema-registry-service-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-json-schema-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-record-serialization-service-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-lookup-service-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-kerberos-user-service-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-security-kerberos-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-proxy-configuration-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-record-sink-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-web-client-provider-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-web-client-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-key-service-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-file-resource-service-api</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>provided</scope>
            </dependency>
            <!-- Mock Framework -->
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-mock-record-utils</artifactId>
                <version>2.4.0-SNAPSHOT</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
