/*!
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

@use 'sass:map';
@use '@angular/material' as mat;

@mixin generate-codemirror-theme() {
    .ngx-codemirror {
        display: none;
    }

    .cm-s-nifi.CodeMirror {
        @extend .neutral-contrast;
        height: 100%;
        cursor: default;
        line-height: normal;
        background-color: var(--mat-sys-background);
        border: 1px solid;
    }

    .cm-s-nifi .CodeMirror-gutters {
        background: var(--nf-codemirror-gutters);
    }

    .cm-s-nifi .CodeMirror-guttermarker,
    .cm-s-nifi .CodeMirror-guttermarker-subtle,
    .cm-s-nifi .CodeMirror-linenumber {
        color: var(--nf-codemirror-linenumber);
    }

    .cm-s-nifi .CodeMirror-cursor {
        border-left: 1px solid var(--mat-sys-on-surface);
    }

    .cm-s-nifi div.CodeMirror-selected {
        background: var(--mat-sys-tertiary-container);
    }

    .cm-s-nifi.CodeMirror-focused div.CodeMirror-selected {
        background: var(--mat-sys-tertiary-container);
    }

    .cm-s-nifi .CodeMirror-line::selection,
    .cm-s-nifi .CodeMirror-line > span::selection,
    .cm-s-nifi .CodeMirror-line > span > span::selection {
        background: var(--nf-codemirror-selection);
    }

    .cm-s-nifi .CodeMirror-line::-moz-selection,
    .cm-s-nifi .CodeMirror-line > span::-moz-selection,
    .cm-s-nifi .CodeMirror-line > span > span::-moz-selection {
        background: var(--nf-codemirror-selection);
    }

    .cm-s-nifi .cm-header {
        color: var(--nf-codemirror-header);
    }

    .cm-s-nifi .cm-quote {
        color: var(--nf-codemirror-quote);
    }

    .cm-s-nifi .cm-negative {
        color: var(--nf-codemirror-negative);
    }

    .cm-s-nifi .cm-positive {
        color: var(--nf-codemirror-positive);
    }

    .cm-s-nifi .cm-bracket {
        color: var(--nf-codemirror-bracket);
    }

    .cm-s-nifi .cm-link {
        color: var(--nf-codemirror-link);
    }

    .cm-s-nifi .cm-invalidchar {
        color: var(--nf-codemirror-invalidchar);
    }

    .cm-s-nifi .cm-keyword {
        color: var(--nf-codemirror-keyword);
    }

    .cm-s-nifi .cm-operator {
        color: var(--nf-codemirror-operator);
    }

    .cm-s-nifi .cm-variable-2 {
        color: var(--nf-codemirror-variable-2);
    }

    .cm-s-nifi .cm-variable-3,
    .cm-s-nifi .cm-type {
        color: var(--nf-codemirror-variable-3);
    }

    .cm-s-nifi .cm-builtin {
        color: var(--nf-codemirror-builtin);
    }

    .cm-s-nifi .cm-atom {
        color: var(--nf-codemirror-atom);
    }

    .cm-s-nifi .cm-number {
        color: var(--nf-codemirror-number);
    }

    .cm-s-nifi .cm-def {
        color: var(--nf-codemirror-def);
    }

    .cm-s-nifi .cm-string {
        color: var(--nf-codemirror-string);
    }

    .cm-s-nifi .cm-string-2 {
        color: var(--nf-codemirror-string2);
    }

    .cm-s-nifi .cm-comment {
        color: var(--nf-codemirror-comment);
    }

    .cm-s-nifi .cm-variable,
    .cm-s-nifi .cm-punctuation,
    .cm-s-nifi .cm-property,
    .cm-s-nifi .cm-operator {
        color: var(--nf-codemirror-variable);
    }

    .cm-s-nifi .cm-tag {
        color: var(--nf-codemirror-tag);
    }

    .cm-s-nifi .cm-meta {
        color: var(--mat-sys-secondary);
    }

    .cm-s-nifi .cm-attribute {
        color: var(--nf-codemirror-keyword);
    }

    .cm-s-nifi .cm-property {
        color: var(--nf-codemirror-keyword);
    }

    .cm-s-nifi .cm-qualifier {
        color: var(--mat-sys-secondary);
    }

    .cm-s-nifi .cm-variable-3,
    .cm-s-nifi .cm-s-default,
    .cm-s-nifi .cm-type {
        color: var(--mat-sys-secondary);
    }

    .cm-s-nifi .cm-error {
        color: var(--nf-codemirror-error-color);
        background-color: var(--nf-codemirror-error-background-color);
    }

    .cm-s-nifi .CodeMirror-matchingbracket {
        text-decoration: underline;
        color: var(--mat-sys-on-primary) !important;
        background-color: var(--nf-neutral);
    }

    .cm-s-nifi .CodeMirror-nonmatchingbracket {
        color: var(--nf-codemirror-nonmatchingbracket);
    }

    .cm-s-nifi .CodeMirror-matchingtag {
        background: var(--nf-codemirror-matchingtag);
    }

    .cm-s-nifi .CodeMirror-activeline-background {
        background: var(--nf-codemirror-activeline-background);
    }
}
